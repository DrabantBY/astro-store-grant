---
import CloseLayout from "@layouts/CloseLayout.astro";
import HeaderLink from "./HeaderLink.astro";

import AccountSvg from "@svg/account.svg";
import CartSvg from "@svg/cart.svg";

import { mainLinks } from "@data/mainLinks.js";

const { id } = Astro.props;
const { pathname } = new URL(Astro.request.url);
---

<dialog id={id} class="mobile-menu">
  <header class="mobile-menu__header">
    <CloseLayout onclick="menu.close()" />
    <nav class="mobile-menu__nav">
      <ul class="mobile-menu__list">
        {
          mainLinks
            .filter(({ icon }) => Boolean(icon))
            .map((link) => (
              <HeaderLink {...link} active={link.href === pathname} />
            ))
        }
      </ul>
    </nav>

    <button type="button" class="mobile-menu__modal">
      <AccountSvg />
    </button>
    <button
      type="button"
      class="mobile-menu__modal"
      onclick="cart.showModal()"
      data-count="2"
    >
      <CartSvg />
    </button>
  </header>
  <main class="mobile-menu__main">
    <slot />
  </main>
</dialog>

<style lang="scss">
  @use "../../styles/variables" as vars;
  @use "../../styles/mixins" as mixins;

  .mobile-menu {
    block-size: 100vh;
    max-block-size: 100vh;
    inline-size: 100%;
    max-inline-size: 100%;
    padding-inline: vars.$padding;
    color: vars.$clr-white;
    background-color: vars.$clr-dark;
    transform: translateX(-100%);
    transition:
      transform 0.2s,
      display 0.2s,
      overlay 0.2s;
    transition-behavior: allow-discrete;

    &::backdrop {
      background-color: transparent;
    }

    &[open] {
      transform: translateX(0);

      @starting-style {
        transform: translateX(-100%);
      }
    }

    &__header {
      block-size: 8rem;
      display: flex;
      align-items: center;
      gap: 2rem;
    }

    &__list {
      justify-content: space-between;
    }

    &__modal {
      &:hover {
        color: vars.$clr-disable;
      }

      &[data-count] {
        @include mixins.amount-badge(vars.$clr-white);

        &::after {
          background-color: vars.$clr-black;
        }
      }
    }

    :where(&__nav, &__list) {
      flex-grow: 1;
    }

    :where(&__list, &__modal) {
      display: flex;
      align-items: center;
    }
  }
</style>
